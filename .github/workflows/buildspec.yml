

name: CICD cicd_broker

on:
    push:
        branches: [main]
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
           - name: check repository
             uses: actions/checkout@v4

           - name: use nodejs version 20.16.0
             uses: actions/setup-node@v1
             with:
                node-version: '20.16.0'

           - name: run npm install
             run: |
                 npm install
                 echo "application setup"
           
           - name: configure aws credentials
             uses: mr-smithers-excellent/docker-build-push@v6
             with:
                 tags: latest
                 image: broker
                 registry: 084877974095.dkr.ecr.eu-west-1.amazonaws.com
             env:
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}

                  
    
    deploy:
        needs: build
        runs-on: [self-hosted]
        steps:
        - name: login to aws ecr with docker
          run: aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 084877974095.dkr.ecr.eu-west-1.amazonaws.com
        - name: delete old container
          run: docker rm -f broker_app_container
        - name: clear residual containers that bLocks the space
          run: |
             docker container prune
             echo "Y"
             docker image prune -a
             echo "Y"  
        - name: pull image from the aws repository
          run: docker pull 084877974095.dkr.ecr.eu-west-1.amazonaws.com/broker:latest
        - name: run docker container
          run: docker run -d -p 4500:4500 --name broker_app_container 084877974095.dkr.ecr.eu-west-1.amazonaws.com/broker
          env:
              AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
              AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}